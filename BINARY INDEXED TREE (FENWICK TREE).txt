class BIT {
public:
    vector<int> tree;
    int N;

    BIT(int n) : N(n), tree(n+1,0) {}

    void update(int i, int d) { for(;i<=N;i+=i&-i) tree[i]+=d; }

    int sum(int i) {
        int s = 0;
        for(;i>0;i-=i&-i) s+=tree[i];
        return s;
    }

    int query(int l, int r) { return sum(r)-sum(l-1); }
};


FENWICK TREE ON VALUES
int max = 0;
        for (int i = 0; i < nums.size(); i++) if (nums[i] > max) max = nums[i];
        BIT left(max), right(max);

        for (int i = nums.size()-1; i > -1; i--) right.update(nums[i],1);

        int ret = 0;
        for (int i = 0; i < nums.size(); i++) {
            right.update(nums[i],-1);
            if (left.query(0,nums[i]-1) >= k && right.query(0,nums[i]-1) >= k) ret++;
            left.update(nums[i], 1);
        }

        return ret; 